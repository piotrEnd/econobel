{"version":3,"sources":["components/Header.js","components/Laureate.js","components/App.js","serviceWorker.js","index.js"],"names":["Top","styled","div","_templateObject","Heading","_templateObject2","SelectYear","select","_templateObject3","OptionYear","option","_templateObject4","Header","props","years","year","map","react_default","a","createElement","key","value","onChange","change","Container","Laureate_templateObject","Winner","Laureate_templateObject2","Motivation","blockquote","Laureate_templateObject3","Year","Laureate_templateObject4","Laureate","motivation","data","laureates","winners","winner","id","href","concat","surname","target","rel","toUpperCase","firstname","slice","length","App","state","isLoaded","handleChange","e","_this","setState","targetId","document","querySelector","scrollIntoView","behavior","block","_this2","this","fetch","process","then","response","json","prizes","laureate","components_Laureate","react_router_dom","basename","components_Header","style","textAlign","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"s8CAGA,IAAMA,EAAMC,IAAOC,IAAVC,KAkBHC,EAAUH,IAAOC,IAAVG,KAOPC,EAAaL,IAAOM,OAAVC,KAiCVC,EAAaR,IAAOS,OAAVC,KA4BDC,EArBA,SAACC,GACf,IAAMC,EAAQD,EAAME,KAAKC,IAAI,SAACD,GAAD,OAC5BE,EAAAC,EAAAC,cAACV,EAAD,CAAYW,IAAKL,EAAKA,KAAMM,MAAON,EAAKA,MACtCA,EAAKA,QAIR,OACCE,EAAAC,EAAAC,cAACnB,EAAD,KACCiB,EAAAC,EAAAC,cAACf,EAAD,YACKa,EAAAC,EAAAC,cAAA,4BADL,wBADD,SAIU,IACTF,EAAAC,EAAAC,cAACb,EAAD,CAAYgB,SAAUT,EAAMU,OAAQF,MAAOR,EAAMQ,OAC/CP,GACY,IAPf,09CCzEF,IAAMU,EAAYvB,IAAOC,IAAVuB,KAMTC,EAASzB,IAAOC,IAAVyB,KA6BNC,EAAa3B,IAAO4B,WAAVC,KAuBVC,EAAO9B,IAAOC,IAAV8B,KA0CKC,EAxBE,SAACpB,GACjB,IAAMqB,EAAarB,EAAMsB,KAAKC,UAAU,GAAGF,WAErCG,EAAUxB,EAAMsB,KAAKC,UAAUpB,IAAI,SAACsB,GAAD,OACxCrB,EAAAC,EAAAC,cAAA,OAAKC,IAAKkB,EAAOC,IAChBtB,EAAAC,EAAAC,cAAA,KACCqB,KAAI,uDAAAC,OAAyD5B,EAAMsB,KACjEpB,KADE,KAAA0B,OACMH,EAAOI,QADb,UAEJC,OAAO,SACPC,IAAI,uBAEHN,EAAOI,QAAQG,cANjB,KAMkCP,EAAOQ,UANzC,YAUF,OACC7B,EAAAC,EAAAC,cAACK,EAAD,CAAWe,GAAI,IAAM1B,EAAMsB,KAAKpB,MAC/BE,EAAAC,EAAAC,cAACO,EAAD,KAASW,GACTpB,EAAAC,EAAAC,cAACS,EAAD,KAAaM,EAAWa,MAAM,EAAGb,EAAWc,OAAS,IACrD/B,EAAAC,EAAAC,cAACY,EAAD,KAAOlB,EAAMsB,KAAKpB,QCpDNkC,6MAxCdC,MAAQ,CACPd,UAAW,GACXe,UAAU,EACV9B,MAAO,MAcR+B,aAAe,SAACC,GACfC,EAAKC,SAAS,CACblC,MAAOgC,EAAEV,OAAOtB,QAGjB,IAAMmC,EAAQ,KAAAf,OAAQY,EAAEV,OAAOtB,OAC/BoC,SAASC,cAAcF,GAAUG,eAAe,CAAEC,SAAU,SAAUC,MAAO,8FAjB1D,IAAAC,EAAAC,KAGnBC,MAAMC,4BAA8BC,KAAK,SAACC,GAAD,OAAcA,EAASC,SAAQF,KAAK,SAAC/B,GAC7E2B,EAAKP,SAAS,CACbnB,UAAWD,EAAKkC,OAChBlB,UAAU,uCAeZ,IAAMf,EAAY2B,KAAKb,MAAMd,UAAUpB,IAAI,SAACsD,GAAD,OAC1CrD,EAAAC,EAAAC,cAACoD,EAAD,CAAUnD,IAAKkD,EAASvD,KAAMoB,KAAMmC,MAGrC,OACCrD,EAAAC,EAAAC,cAACqD,EAAA,EAAD,CAAQC,SAAUR,aACjBhD,EAAAC,EAAAC,cAACuD,EAAD,CAAQ3D,KAAMgD,KAAKb,MAAMd,UAAWb,OAAQwC,KAAKX,eAChDW,KAAKb,MAAMC,SAAWf,EAAYnB,EAAAC,EAAAC,cAAA,MAAIwD,MAAO,CAAEC,UAAW,WAAxB,sBAnCrBC,aCOEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnE,EAAAC,EAAAC,cAACkE,EAAD,MAAS5B,SAAS6B,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvB,KAAK,SAAAwB,GACjCA,EAAaC","file":"static/js/main.7532ac48.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Top = styled.div`\r\n\tpadding-top: 2vh;\r\n\tfont-size: 1.5rem;\r\n\ttext-align: center;\r\n\tposition: sticky;\r\n\ttop: 0;\r\n\r\n\t@media (min-width: 650px) {\r\n\t\tpadding-top: 4vh;\r\n\t\tfont-size: 1.75rem;\r\n\t}\r\n\r\n\t@media (min-width: 975px) {\r\n\t\tpadding-top: 6vh;\r\n\t\tfont-size: 2rem;\r\n\t}\r\n`;\r\n\r\nconst Heading = styled.div`\r\n\tspan {\r\n\t\tcolor: rgb(206, 161, 82);\r\n\t\tletter-spacing: 1px;\r\n\t}\r\n`;\r\n\r\nconst SelectYear = styled.select`\r\n\tcursor: pointer;\r\n\r\n\twidth: 8rem;\r\n\tpadding: 5px 8px;\r\n\r\n\ttext-align: center;\r\n\ttext-align-last: center;\r\n\r\n\tcolor: white;\r\n\tborder: none;\r\n\tbox-shadow: none;\r\n\tbackground: rgb(206, 161, 82);\r\n\ttext-shadow: 0 0 0 rgb(206, 161, 82);\r\n\t-webkit-appearance: none;\r\n\r\n\ttransition: .25s;\r\n\r\n\t&:hover {\r\n\t\tcolor: rgb(206, 161, 82);\r\n\t\tbackground: white;\r\n\t\twidth: 50%;\r\n\t}\r\n\r\n\t@media (min-width: 650px) {\r\n\t\twidth: 12rem;\r\n\t}\r\n\r\n\t@media (min-width: 975px) {\r\n\t\twidth: 18rem;\r\n\t}\r\n`;\r\n\r\nconst OptionYear = styled.option`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\talign-self: center;\r\n`;\r\n\r\nconst Header = (props) => {\r\n\tconst years = props.year.map((year) => (\r\n\t\t<OptionYear key={year.year} value={year.year}>\r\n\t\t\t{year.year}\r\n\t\t</OptionYear>\r\n\t));\r\n\r\n\treturn (\r\n\t\t<Top>\r\n\t\t\t<Heading>\r\n\t\t\t\tThe <span>NOBEL PRIZE </span>in Economic Sciences\r\n\t\t\t</Heading>\r\n\t\t\t&#x21c1;{' '}\r\n\t\t\t<SelectYear onChange={props.change} value={props.value}>\r\n\t\t\t\t{years}\r\n\t\t\t</SelectYear>{' '}\r\n\t\t\t&#8637;\r\n\t\t</Top>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n\theight: 100vh;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n`;\r\n\r\nconst Winner = styled.div`\r\n\tpadding-top: 5rem;\r\n\tfont-family: 'Raleway', sans-serif;\r\n\tfont-size: 2rem;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tflex-grow: 1;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tfont-family: 'Lora', serif;\r\n\tline-height: 1.8;\r\n\ta {\r\n\t\ttext-decoration: none;\r\n\t\tcolor: rgb(206, 161, 82);\r\n\t\ttransition: .75s;\r\n\t\t&:hover {\r\n\t\t\tcolor: black;\r\n\t\t}\r\n\t}\r\n\r\n\t@media (min-width: 650px) {\r\n\t\tfont-size: 2.5rem;\r\n\t}\r\n\r\n\t@media (min-width: 975px) {\r\n\t\tfont-size: 3.5rem;\r\n\t}\r\n`;\r\n\r\nconst Motivation = styled.blockquote`\r\n\tdisplay: flex;\r\n\tflex-grow: 1;\r\n\twidth: 70%;\r\n\tmargin: 0 auto;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\r\n\tfont-size: 1.5rem;\r\n\tfont-style: italic;\r\n\tletter-spacing: 2px;\r\n\r\n\t@media (min-width: 650px) {\r\n\t\twidth: 55%;\r\n\t\tfont-size: 1.8rem;\r\n\t}\r\n\r\n\t@media (min-width: 975px) {\r\n\t\twidth: 40%;\r\n\t\tfont-size: 2.2rem;\r\n\t}\r\n`;\r\n\r\nconst Year = styled.div`\r\n\tpadding-bottom: .15rem;\r\n\r\n\tfont-size: .8rem;\r\n\ttext-align: center;\r\n\tcolor: rgb(206, 161, 82);\r\n\r\n\t@media (min-width: 650px) {\r\n\t\tfont-size: 1rem;\r\n\t\tpadding-bottom: .25rem;\r\n\t}\r\n\r\n\t@media (min-width: 975px) {\r\n\t\tfont-size: 1.2rem;\r\n\t\tpadding-bottom: .45rem;\r\n\t}\r\n`;\r\n\r\nconst Laureate = (props) => {\r\n\tconst motivation = props.data.laureates[0].motivation;\r\n\r\n\tconst winners = props.data.laureates.map((winner) => (\r\n\t\t<div key={winner.id}>\r\n\t\t\t<a\r\n\t\t\t\thref={`https://www.nobelprize.org/prizes/economic-sciences/${props.data\r\n\t\t\t\t\t.year}/${winner.surname}/facts`}\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t>\r\n\t\t\t\t{winner.surname.toUpperCase()}, {winner.firstname} &#xab;\r\n\t\t\t</a>\r\n\t\t</div>\r\n\t));\r\n\treturn (\r\n\t\t<Container id={'Y' + props.data.year}>\r\n\t\t\t<Winner>{winners}</Winner>\r\n\t\t\t<Motivation>{motivation.slice(1, motivation.length - 1)}</Motivation>\r\n\t\t\t<Year>{props.data.year}</Year>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Laureate;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Header from './Header';\nimport Laureate from './Laureate';\n\nclass App extends Component {\n\tstate = {\n\t\tlaureates: [],\n\t\tisLoaded: false,\n\t\tvalue: ''\n\t};\n\n\tcomponentDidMount() {\n\t\t// const url = `http://api.nobelprize.org/v1/prize.json?category=economics`;\n\t\tconst url = '/economics.json';\n\t\tfetch(process.env.PUBLIC_URL + url).then((response) => response.json()).then((data) => {\n\t\t\tthis.setState({\n\t\t\t\tlaureates: data.prizes,\n\t\t\t\tisLoaded: true\n\t\t\t});\n\t\t});\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\tvalue: e.target.value\n\t\t});\n\n\t\tconst targetId = `#Y${e.target.value}`;\n\t\tdocument.querySelector(targetId).scrollIntoView({ behavior: 'smooth', block: 'start' });\n\t};\n\n\trender() {\n\t\tconst laureates = this.state.laureates.map((laureate) => (\n\t\t\t<Laureate key={laureate.year} data={laureate} />\n\t\t));\n\n\t\treturn (\n\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t<Header year={this.state.laureates} change={this.handleChange} />\n\t\t\t\t{this.state.isLoaded ? laureates : <h1 style={{ textAlign: 'center' }}>Loading...</h1>}\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}